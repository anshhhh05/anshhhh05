name: WordPresss and Cypresss Workflow

on:
  push:
    branches:
      - main  # Trigger on push to main branch

jobs:
  setup-and-test:
    runs-on: ubuntu-latest  # Use an Ubuntu environment

    steps:
    # Step 1: Check out the repository code
    - name: Checkout repository
      uses: actions/checkout@v3

    # Step 2: Set up PHP and dependencies
    - name: Set up PHP and dependencies
      run: |
        sudo apt update
        sudo apt install -y apache2 mysql-server php php-cli php-fpm php-mysql php-xml php-mbstring php-curl php-zip wget curl unzip

    # Step 3: Install WordPress
    - name: Install WordPress
      run: |
        sudo wget https://wordpress.org/latest.tar.gz
        sudo tar -xzvf latest.tar.gz
        sudo mv wordpress /var/www/html/
        sudo chown -R www-data:www-data /var/www/html/wordpress

    # Step 4: Configure MySQL for WordPress
   
    - name: Install MySQL
      run: |
          # Update package list and install MySQL
          sudo apt-get update
          sudo apt-get install -y mysql-server

          # Start the MySQL service
          sudo systemctl start mysql

          # Enable MySQL to start on boot
          sudo systemctl enable mysql

          # Set root password manually
          sudo mysql -e "ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY 'password';"

    - name: Create WordPress Database
      run: |
          # Create the WordPress database with the password
          sudo mysql -u root -ppassword -e "CREATE DATABASE wordpress;"

    # Step 5: Set up WordPress config
    - name: Configure WordPress wp-config.php
      run: |
        cd /var/www/html/wordpress
        sudo cp wp-config-sample.php wp-config.php
        sudo sed -i 's/database_name_here/wordpress/' wp-config.php
        sudo sed -i 's/username_here/wp_user/' wp-config.php
        sudo sed -i 's/password_here/password/' wp-config.php

    # Step 6: Install Cypress
    - name: Install Cypress
      run: |
        npm init -y
        npm install cypress --save-dev

    # Step 7: Add Cypress test script
    - name: Add Cypress test case
      run: |
        echo "describe('WordPress Admin Login Test', () => {" > cypress/integration/login_spec.js
        echo "  it('logs in with admin credentials', () => {" >> cypress/integration/login_spec.js
        echo "    cy.visit('http://localhost/wordpress/wp-login.php')" >> cypress/integration/login_spec.js
        echo "    cy.get('#user_login').type('admin')" >> cypress/integration/login_spec.js
        echo "    cy.get('#user_pass').type('admin')" >> cypress/integration/login_spec.js
        echo "    cy.get('#wp-submit').click()" >> cypress/integration/login_spec.js
        echo "    cy.url().should('include', 'wp-admin')" >> cypress/integration/login_spec.js
        echo "  })" >> cypress/integration/login_spec.js
        echo "})" >> cypress/integration/login_spec.js

    # Step 8: Start Apache for WordPress (with port forwarding)
    - name: Start Apache
      run: |
        sudo systemctl start apache2
        sudo systemctl enable apache2

    # Step 9: Run Cypress tests
    - name: Run Cypress tests
      run: |
        npx cypress run --headless

    # Step 10: Upload Cypress test results
    - name: Upload test results
      uses: actions/upload-artifact@v3
      with:
        name: cypress-test-results
        path: cypress/results

