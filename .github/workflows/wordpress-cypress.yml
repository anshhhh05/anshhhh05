# This is a basic workflow to help you get started with Actions

name: WordPress and Cypress Workflow

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  setup-and-test:
    runs-on: ubuntu-latest
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout repository
        uses: actions/checkout@v4


      - name: Set up PHP and Dependencies
        run: |
          sudo apt update
          sudo apt install -y apache2 mysql-server php php-mysql php-xml php-mbstring php-curl pip-zip wget curl unzip
          
        


      - name: Install WordPress
        run: |
          sudo wget https://wordpress.org/latest.tar.gz
          sudo tar -xzvf latest.tar.gz
          sudo mv wordpress /var/www/html/
          sudo chown -R www-data:www-data /var/www/html/wordpress

      - name: Configure MySQL for WordPress
        run: |
            sudo mysql -e "CREATE DATABASE wordpress;"
            sudo mysql -e "CREATE USER 'wp_user'@'localhost' IDENTIFIED BY 'password';"
            sudo mysql -e "GRANT ALL PRIVILEGES ON wordpress.* TO 'wp_user'@'localhost';"
            sudo mysql -e "FLUSH PRIVILEGES;"

      - name: Configure WordPress wp-config.php
        run: |
          cd /var/www/html/wordpress
          sudo cp wp-config-sample.php wp-config.php
          sudo sed -i 's/database_name_here/wordpress/' wp-config.php
          sudo sed -i 's/username_here/wp_user/' wp-config.php
          sudo sed -i 's/password_here/password/' wp-config.php

      - name: Install Cypress
        run: |
          npm init -y
          npm install cypress --save-dev

      - name: Add Cypress test case
        run: |
          echo "describe('WordPress Admin Login Test', () => {" > cypress/integration/login_spec.js
          echo "  it('logs in with admin credentials', () => {" >> cypress/integration/login_spec.js
          echo "    cy.visit('http://localhost/wordpress/wp-login.php')" >> cypress/integration/login_spec.js
          echo "    cy.get('#user_login').type('admin')" >> cypress/integration/login_spec.js
          echo "    cy.get('#user_pass').type('admin')" >> cypress/integration/login_spec.js
          echo "    cy.get('#wp-submit').click()" >> cypress/integration/login_spec.js
          echo "    cy.url().should('include', 'wp-admin')" >> cypress/integration/login_spec.js
          echo "  })" >> cypress/integration/login_spec.js
          echo "})" >> cypress/integration/login_spec.js

      - name: Start Apache
        run: |
          sudo systemctl start apache2
          sudo systemctl enable apache2

      - name: Run Cypress tests
        run: |
          npx cypress run --headless

      - name: Upload test results
        uses: actions/upload-artifact@v3
        with:
          name: cypress-test-results
          path: cypress/results





